{"meta":{"title":"凭海听涛","subtitle":"Java学习博客","description":"我是一个要努力成为大佬的菜鸡！","author":"Tao","url":"https://jiyezt.co","root":"/"},"pages":[{"title":"","date":"2022-03-22T03:34:12.846Z","updated":"2022-03-22T03:34:12.846Z","comments":true,"path":"404.html","permalink":"https://jiyezt.co/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"膜拜大佬集中地","date":"2022-03-23T09:48:41.712Z","updated":"2022-03-23T09:48:41.712Z","comments":true,"path":"friends/index.html","permalink":"https://jiyezt.co/friends/index.html","excerpt":"小菜鸡的大佬膜拜页，每天一拜，知识飞来~","text":"小菜鸡的大佬膜拜页，每天一拜，知识飞来~"},{"title":"","date":"2022-03-21T12:22:58.683Z","updated":"2022-03-21T12:22:58.683Z","comments":true,"path":"about/index.html","permalink":"https://jiyezt.co/about/index.html","excerpt":"","text":"是一个小菜鸡，努力学习中…"},{"title":"所有分类","date":"2022-03-22T03:21:38.235Z","updated":"2022-03-22T03:21:38.235Z","comments":true,"path":"categories/index.html","permalink":"https://jiyezt.co/categories/index.html","excerpt":"","text":""},{"title":"","date":"2022-03-22T03:24:12.281Z","updated":"2022-03-22T03:24:12.281Z","comments":true,"path":"mylist/index.html","permalink":"https://jiyezt.co/mylist/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2022-03-22T03:22:54.140Z","updated":"2022-03-22T03:22:54.140Z","comments":true,"path":"tags/index.html","permalink":"https://jiyezt.co/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"day02-面向对象基础","slug":"day02-面向对象基础","date":"2022-07-12T15:13:36.000Z","updated":"2022-07-12T15:14:12.021Z","comments":true,"path":"2022/07/12/day02-面向对象基础/","link":"","permalink":"https://jiyezt.co/2022/07/12/day02-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%9F%BA%E7%A1%80/","excerpt":"","text":"","categories":[{"name":"Notes","slug":"Notes","permalink":"https://jiyezt.co/categories/Notes/"},{"name":"Java","slug":"Notes/Java","permalink":"https://jiyezt.co/categories/Notes/Java/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://jiyezt.co/tags/Java/"}]},{"title":"day01_Java基础语法","slug":"day01-Java基础语法","date":"2022-07-11T17:56:43.000Z","updated":"2022-07-12T15:12:05.266Z","comments":true,"path":"2022/07/12/day01-Java基础语法/","link":"","permalink":"https://jiyezt.co/2022/07/12/day01-Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/","excerpt":"","text":"一、数据类型1. Java的八种基本数据类型 数据类型 位数 默认值 取值范围 举例 byte-位 8 0 -2^7 - 2^7-1 byte b &#x3D; 10; short-短整数 16 0 -2^15 - 2^15-1 short s &#x3D; 10; int-整数 32 0 -2^31 - 2^31-1 int i &#x3D; 10; long-长整数 64 0 -2^63 - 2^63-1 long l &#x3D; 10; float-单精度 32 0.0 -2^31 - 2^31-1 float f &#x3D; 10.0f; double-双精度 64 0.0 -2^61 - 2^61-1 double b &#x3D; 10.0d; char-字符 16 空 0 - 2^15-1 char c &#x3D; ‘c’; boolean-布尔值 8 false true - false boolean b &#x3D; true; 二、 基础运算1. byte类型两个byte类型进行运算，会提升到int类型再去运算，不可使用byte类型接收。 123456public static void main(String[]args)&#123; byte b1 = 1; byte b2 = 2; byte b3 = 1 + 2; byte b4 = b1 + b2;&#125; 此时的b3&#x3D;1+2,是常量相加，编译的时候确定了结果并没有超过byte类型的取值范围，可以赋值给变量b3，因此b3&#x3D;1+2是正确的。反之，b4&#x3D;b1+b2，b2和b3是变量，变量的值是可能变化的，在编译的时候，在编译的时候，编译器javac不确定b2+b3的结果是什么，因此会将结果以int类型进行处理，所以int类型不能赋值给byte类型，因此编译失败。 2. 其他类型两个整数类型进行除法运算，结果只会为整数，只有小数参与运算才会产生小数。char类型参与运算，使用的是十进制数值，’a’ -&gt; 97,’A’ -&gt; 65,’0’ -&gt; 48. 3. 不同类型运算算数表达式中包含不同类型的数值时，会自动提升数据类型。提升规则为： byte,short,char类型会被自动提升为int类型，不管是否有其他类型参与运算； 整个表达式自动提升到与表达式中最高等级的操作数相同的类型。 byte,short,char -&gt; int -&gt; long -&gt; float -&gt; double 4. 其他注意事项 在 + 操作中，出现了字符串之后，则进行字符串拼接，可以通过小括号提升优先级。 12System.out.println(1 + 2 + &quot;tao&quot; + (3 + 4));//输出结果为：3tao7 +&#x3D;,-&#x3D;,*&#x3D;,&#x2F;&#x3D;等运算会自动包含强制类型转换。123short s = 10;s = s + 10; //此代码报错，因为运算中s提升为int类型，结果为int类型赋值给short可能损失精度。s += 10; //此代码没有问题，隐含了类型转换，相当于s = (short)(s + 10) ++和–在单独运算中，前后没有区别，在运算式中，如果在变量前，先进行自增自减运算再参与运算式。如果在变量后，先参与运算式，再自增自减。5. 逻辑运算符 运算符 逻辑 结果 &amp; 逻辑与 a&amp;b，a和b都是true，结果为true，否则为false &amp;#124; 逻辑或 a&amp;#124;b，a和b都是false，结果为false，否则为true ^ 逻辑异或 a^b，a和b结果不同为true，相同为false ! 逻辑非 !a，结果和a相反 &amp;&amp; 短路与 与的功能，一旦发现到false，则后续不执行 &amp;#124;&amp;#124; 短路或 或的功能，一旦发现到true，则后续不执行 三、 流程控制1. 顺序结构&#x2F;分支结构之if结构2. switch结构123456789101112switch(表达式) &#123; case 1: 语句1; break; case 2: 语句2; break; ... default: 语句n+1; break;&#125; 表达式和case值匹配就会执行对应case的语句，都不匹配则执行default语句。 3. for循环123for(初始化语句;条件判断语句;条件控制语句) &#123; 循环体语句;&#125; 4. while和do…while while循环1234while(条件判断语句) &#123; 循环体语句; 条件控制语句;&#125; do…while1234do &#123; 循环体语句; 条件控制语句;&#125;while(条件判断语句) 5. 有关循环的要点 三种循环的异同 for循环和while循环先判断条件是否成立，然后决定是否执行循环体(先判断后执行); do…while循环先执行一次循环，然后再去判断条件是否成立，是否继续执行循环体。 for循环和while循环的区别 条件控制语句所控制的自增变量，因为归属for循环的语法结构中，在for循环结束后，就不能再次被访问到了。 条件控制语句所控制的自增变量，对于while循环来说不归属其语法结构中，在while循环结束后，该变量还可以继续使用。 死循环(无限循环)的三种格式 for(;;) {} while(true) {} do() {}while(true) 四、 数组1. 数组定义格式 int[] arr; int arr[]; int[] arr &#x3D; new int[3];2. 数组初始化 数据类型[] 数组名 &#x3D; new 数据类型[]{元素1,元素2,…}; 数据类型[] 数组名 &#x3D; {元素1,元素2,…};3. 数组的传递在方法间传递数组时，传递的是数组的地址值","categories":[{"name":"Notes","slug":"Notes","permalink":"https://jiyezt.co/categories/Notes/"},{"name":"Java","slug":"Notes/Java","permalink":"https://jiyezt.co/categories/Notes/Java/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://jiyezt.co/tags/Java/"}]},{"title":"实现在CentOS上非root用户免密登录","slug":"实现在CentOS上非root用户免密登录","date":"2022-03-23T12:13:02.000Z","updated":"2022-07-12T03:46:35.868Z","comments":true,"path":"2022/03/23/实现在CentOS上非root用户免密登录/","link":"","permalink":"https://jiyezt.co/2022/03/23/%E5%AE%9E%E7%8E%B0%E5%9C%A8CentOS%E4%B8%8A%E9%9D%9Eroot%E7%94%A8%E6%88%B7%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/","excerpt":"本文是记录一下在搭建腾讯云服务器时，解决非root用户登录需要输入密码的问题。","text":"本文是记录一下在搭建腾讯云服务器时，解决非root用户登录需要输入密码的问题。 1、创建SSH密钥并绑定用户 首先在本地创建ssh密钥,密钥位置为&#x2F;user&#x2F;.ssh1ssh-keygen -t rsa -C &quot;your email&quot; .ssh文件夹内有id_rsa和id_rsa.pub两个文件，其中id_rsa.pub是公钥，将公钥上传到腾讯云并绑定云服务器。 2、创建新用户 使用SSH连接云服务器1ssh root@jiyezt.co 如果使用的是已经存在的密钥，可能登录失败，需要删除本地机.ssh文件夹下的known_hosts即可。 创建新用户并设置密码12[root@centos ~]# useradd -m -G wheel tao[root@centos ~]# passwd tao 3、配置新用户密钥文件 查看&#x2F;root&#x2F;.ssh文件夹下的authorized_keys文件，复制公钥。1[root@centos ~]# cat .ssh/authorized_keys 进入新用户目录下，新建.ssh文件夹，创建新文件authorized_keys，将复制的公钥放入。1234[root@centos ~]# cd /home/tao[root@centos tao]# mkdir .ssh[root@centos tao]# cd .ssh[root@centos .ssh]# vim authorized_keys 3、调整文件夹和文件的权限 调整权限12[root@centos .ssh]# chmod 700 ~/.ssh[root@centos .ssh]# chmod 600 ~/.ssh/authorized_keys 修改&#x2F;etc&#x2F;ssh&#x2F;sshd_config，设置以下配置项12AuthorizedKeysFile .ssh/authorized_keysPubkeyAuthentication yes","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://jiyezt.co/categories/CentOS/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://jiyezt.co/tags/CentOS/"},{"name":"SSH","slug":"SSH","permalink":"https://jiyezt.co/tags/SSH/"}]},{"title":"Hexo+Nginx+腾讯云搭建个人博客","slug":"Hexo-Nginx-腾讯云搭建个人博客","date":"2022-03-23T06:38:45.000Z","updated":"2022-07-12T03:44:08.282Z","comments":true,"path":"2022/03/23/Hexo-Nginx-腾讯云搭建个人博客/","link":"","permalink":"https://jiyezt.co/2022/03/23/Hexo-Nginx-%E8%85%BE%E8%AE%AF%E4%BA%91%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"一、服务器搭建1、前期准备* 购买云服务器，本文采用的是腾讯云 * 购买域名并解析到服务器IP * 申请SSL证书，一般会赠送一年 * 提交网站备案 2、搭建Git远程仓库 安装Git12yum install -y gitgit version 如果版本较低，可以自行下载编译安装并配置环境变量。由于够用，此处不再赘述。 创建git用户并授权1234567adduser gitpasswd gitsu //如果是普通用户登录的服务器则需要su进入root用户vim /etc/sudoers//修改sudoers，给git授权root ALL=(ALL) ALLgit ALL=(ALL) ALL 3.配置git用户密钥本地机创建密钥 1ssh-keygen -t rsa -C &quot;youremail&quot; 进入git用户目录创建密钥文件 1234cd /home/gitmkdir .sshcd .sshvim authorized_keys 将公钥文件粘贴进去即可。完成后测试连接。 1ssh -v git@(ServerIP) 调整文件夹和文件的权限12[root@centos .ssh]# chmod 700 ~/.ssh[root@centos .ssh]# chmod 600 ~/.ssh/authorized_keys 创建网站目录并配置权限12mkdir /home/blogchown git:git -R /home/blog 创建Git远程仓库123cd /home/gitgit init --bare blog.gitchown git:git -R blog.git 同步网站根目录1234vim /blog.git/hooks/post-receive# !/bin/shgit --work-tree=/home/blog --git-dir=/home/git/blog.git checkout -f 修改权限1chmod +x /home/git/blog.git/hooks/post-receive 3、Nginx安装和配置 安装Nginx并设置开机自启123yum install nginxsystemctl enable nginxsystemctl start nginx 访问服务器IP地址，若出现Nginx信息，则Nginx成功启用。 修改Nginx配置文件12345678vim /etc/nginx/nginx.conf//修改http里面的server配置server &#123; listen 80 default_server; listen [::]:80 default_server; server_name jiyezt.co; //域名 root /home/blog; //网站目录&#125; 4、Nginx部署SSL证书 SSL证书下载 安装WinSCP: https://winscp.net/eng/index.php 将SSL中的Nginx下的两个文件通过WinSCP复制到&#x2F;etc&#x2F;ssl文件夹下。 配置Nginx的https连接1vim /etc/nginx/nginx.conf 首先将最下方的Server{}的注释给解除，然后修改如下配置：1234567891011121314//配置项过多，仅列出需要更改的项，其他项取消注释即可Server &#123; listen 443 ssl; server_name jiyezt.co; root /home/blog; ssl_certificate /etc/ssl/1_jiyezt.co_bundle.crt; ssl_certificate_key /etc/ssl/2_jiyezt.co.key; location / &#123; root /home/blog; index index.html; &#125; &#125; 配置Nginx将http请求转发到https1234//方法1rewrite ^(.*)$ https://$host$1 permanent;//方法2return 301 https://$server_name$request_uri; 二、本地配置1、安装Hexo 安装Node.js官网：https://nodejs.org/en/中文网站：http://nodejs.cn/download/选择LTS版本下载，下载好之后一路下一步安装即可。12node -vnpm -v 能获取到版本则安装成功。安装之后可以修改全局安装地址，可以参考这篇博客：Node.js更换全局安装位置 安装Hexo12npm install -g hexo-clinpm install -g hexo-server 如果下载速度过慢，可以将npm修改为淘宝源，然后安装cnpm，使用cnpm安装Hexo。123456npm install nrm -gnrm use taobaonpm install -g cnpm --registry=https://registry.npm.taobao.orgcnpm install -g hexo-clicnpm install -g hexo-serverhexo v 能读取到Hexo版本信息则安装成功。2、生成博客 选择博客文件本地位置，右键在文件夹中打开终端123hexo init //hexo初始化npm install hexo-deployer-git --savenpm install hexo-server --save 打开目录下的_config.yml,修改如下内容1234deploy: type: git repo: git@(Server IP)/home/git/blog.git branch: master Hexo基本操作1234hexo n &quot;blogName&quot;hexo g //生成静态页面hexo d //部署到云服务器,之后需要在云服务器重新加载一次nginxhexo s //本地开启服务器，有云服务器不需要这个 到此Blog就能正常使用了。当然目前为止使用的是默认主题，更多功能可以参考Hexo官网文档。","categories":[{"name":"CentOS","slug":"CentOS","permalink":"https://jiyezt.co/categories/CentOS/"}],"tags":[{"name":"CentOS","slug":"CentOS","permalink":"https://jiyezt.co/tags/CentOS/"},{"name":"Nginx","slug":"Nginx","permalink":"https://jiyezt.co/tags/Nginx/"},{"name":"Hexo","slug":"Hexo","permalink":"https://jiyezt.co/tags/Hexo/"}]},{"title":"Node.js更换全局安装位置","slug":"Node.js更换全局安装位置","date":"2022-03-23T04:47:30.000Z","updated":"2022-07-12T03:45:08.349Z","comments":true,"path":"2022/03/23/Node.js更换全局安装位置/","link":"","permalink":"https://jiyezt.co/2022/03/23/Node.js%E6%9B%B4%E6%8D%A2%E5%85%A8%E5%B1%80%E5%AE%89%E8%A3%85%E4%BD%8D%E7%BD%AE/","excerpt":"","text":"1、查看当前配置信息 查看所有配置信息1npm config ls 查看npm缓存目录1npm config get cache 查看npm全局目录12npm config get prefixnpm root -g 2、修改全局安装目录和缓存目录 修改配置12npm config set prefix D:\\Develop\\nodejs\\npmnpm config set cache D:\\Develop\\nodejs\\npm_cache 此时再次查看配置信息1npm config ls 此时对于安装目录和缓存目录已经修改完成，配置文件在user目录下的.npmrc,如果需要重置，删除配置文件即可。但是修改好后，全局安装后的指令并不能被识别，还需要修改用户变量。 3、修改环境变量系统环境变量不需要改动，修改用户变量的Path,将D:\\Develop\\nodejs\\npm覆盖掉原本的变量。","categories":[{"name":"Others","slug":"Others","permalink":"https://jiyezt.co/categories/Others/"}],"tags":[{"name":"Node.js","slug":"Node-js","permalink":"https://jiyezt.co/tags/Node-js/"}]}],"categories":[{"name":"Notes","slug":"Notes","permalink":"https://jiyezt.co/categories/Notes/"},{"name":"Java","slug":"Notes/Java","permalink":"https://jiyezt.co/categories/Notes/Java/"},{"name":"CentOS","slug":"CentOS","permalink":"https://jiyezt.co/categories/CentOS/"},{"name":"Others","slug":"Others","permalink":"https://jiyezt.co/categories/Others/"}],"tags":[{"name":"Java","slug":"Java","permalink":"https://jiyezt.co/tags/Java/"},{"name":"CentOS","slug":"CentOS","permalink":"https://jiyezt.co/tags/CentOS/"},{"name":"SSH","slug":"SSH","permalink":"https://jiyezt.co/tags/SSH/"},{"name":"Nginx","slug":"Nginx","permalink":"https://jiyezt.co/tags/Nginx/"},{"name":"Hexo","slug":"Hexo","permalink":"https://jiyezt.co/tags/Hexo/"},{"name":"Node.js","slug":"Node-js","permalink":"https://jiyezt.co/tags/Node-js/"}]}